rule "Initialize light states"
when
	System started
then
	say("Добро пожаловать в умный дом")
	sendCommand(mqtt_pub_esp_id0, "update")
end

rule "MQTT sub esp_id0"
when
	Item mqtt_sub_esp_id0 received update
then
	var json = mqtt_sub_esp_id0.state.toString
	var id = transform("JSONPATH","$.light_id",json)
	var state = transform("JSONPATH","$.state",json)
	
	if((id != null) && (state != null)) postUpdate("hall_light_luster_"+id, state)
end

rule "Voice control"
when
	Item VoiceCommand received update
then
	var command = VoiceCommand.state.toString.toLowerCase
	var String item = null
	var String state = null
	var String answer_beg = null
	var String answer = null

	// ON/OFF 
	if(command.contains("вкл"))
	{
		state = "ON"
		answer_beg = "включаю"
	}
	else if(command.contains("выкл"))
	{
		state = "OFF"
		answer_beg = "выключаю"
	}

	// Where
	if(command.contains("зал") && state != null)
	{
		item = "hall_"
	
		// What
		if(command.contains("свет"))
		{
			item += "light_"

			if(command.contains("бра"))
			{
				// TODO
			}
			else if(command.contains("весь"))
			{
				item += "all"
				answer = "весь свет в зале"
			}
			else if(command.contains("холод"))
			{
				item += "luster_0"
				answer = "холодный свет в зале"
			}
			else if(command.contains("тепл"))
			{
				item += "luster_1"
				answer = "теплый свет в зале"
			}
			else 
			{
				item += "luster_all"
				answer = "свет в зале"
			}
		}
		else if(command.contains("подсвет"))
		{
			// TODO
		}
	}
	else if(command.contains("спал") && state != null)
	{
		// TODO
	}

	if(answer == null) say("неизвестная команда")
	else
	{
		say(answer_beg + " " + answer)
		sendCommand(item, state)
	}
end


